# API Documentation

## Library

The code uses the following libraries and modules:
- `pychrono`: The core Chrono simulation library.
- `pychrono.irrlicht`: The Irrlicht visualization system for Chrono.

## Contact and Collision Setting

### Class: ContactReporter
* **Name**: `ContactReporter`
* **Arguments**: 
  * `box1`: First body to monitor for contacts.
  * `box2`: Second body to monitor for contacts.
* **Usage**: 
  * A callback class derived from `chrono.ReportContactCallback`, used for reporting contacts between specified bodies during the simulation.

#### Method: OnReportContact
* **Name**: `OnReportContact`
* **Arguments**:
  * `self`
  * `pA`: Contact point on object A (ChVector).
  * `pB`: Contact point on object B (ChVector).
  * `plane_coord`: Contact plane coordinate (ChVector).
  * `distance`: Distance between contact points (float).
  * `eff_radius`: Effective contact radius (float).
  * `cforce`: Contact force (ChVector).
  * `ctorque`: Contact torque (ChVector).
  * `modA`: Collision model A (ChCollisionModel).
  * `modB`: Collision model B (ChCollisionModel).
* **Usage**:
  * Reports contacts between the given bodies and prints the contact positions and forces to the console.

### Class: ContactMaterial
* **Name**: `ContactMaterial`
* **Arguments**: None
* **Usage**:
  * A callback class derived from `chrono.AddContactCallback`, used to modify the composite material of a contact.

#### Method: OnAddContact
* **Name**: `OnAddContact`
* **Arguments**:
  * `contactinfo`: Information about the contact (ChCollisionInfo).
  * `material`: Contact material (ChContactMaterialComposite).
* **Usage**:
  * Modifies the effective friction of a contact based on the contact position.

## Visualization Setting

### Method: `chronoirr.drawGrid`
* **Name**: `drawGrid`
* **Arguments**:
  * `vis`: The visualization system (ChVisualSystemIrrlicht).
  * `u_size`: Grid unit size along u-direction (float).
  * `v_size`: Grid unit size along v-direction (float).
  * `nu`: Number of units along u-direction (int).
  * `nv`: Number of units along v-direction (int).
  * `coord`: Coordinate system of the grid (ChCoordsys).
* **Usage**:
  * Draws a grid in the visualization window.

### Method: `chronoirr.drawAllCOGs`
* **Name**: `drawAllCOGs`
* **Arguments**:
  * `vis`: The visualization system (ChVisualSystemIrrlicht).
  * `size`: Size of the COG symbols (float).
* **Usage**:
  * Draws the centers of gravity for all objects in the system.

### Class: `chronoirr.ChVisualSystemIrrlicht`
* **Name**: `ChVisualSystemIrrlicht`
* **Arguments**: None
* **Usage**:
  * Provides an interface to the Irrlicht visualization system.

#### Method: `AttachSystem`
* **Name**: `AttachSystem`
* **Arguments**:
  * `sys`: The physical system (ChSystem).
* **Usage**:
  * Attaches the physical system to the visualization system.

#### Method: `SetWindowTitle`
* **Name**: `SetWindowTitle`
* **Arguments**:
  * `title`: Title of the window (str).
* **Usage**:
  * Sets the title of the visualization window.

#### Method: `SetWindowSize`
* **Name**: `SetWindowSize`
* **Arguments**:
  * `width`: Width of the window (int).
  * `height`: Height of the window (int).
* **Usage**:
  * Sets the dimensions of the visualization window.

#### Method: `Initialize`
* **Name**: `Initialize`
* **Arguments**: None
* **Usage**:
  * Initializes the visualization window.

#### Method: `AddLogo`
* **Name**: `AddLogo`
* **Arguments**:
  * `file_path`: Path to the logo image file (str).
* **Usage**:
  * Adds a logo to the visualization window.

#### Method: `AddSkyBox`
* **Name**: `AddSkyBox`
* **Arguments**: None
* **Usage**:
  * Adds a skybox to the visualization window.

#### Method: `AddCamera`
* **Name**: `AddCamera`
* **Arguments**:
  * `position`: Position of the camera (ChVector3d).
* **Usage**:
  * Adds a camera to the visualization window.

#### Method: `AddTypicalLights`
* **Name**: `AddTypicalLights`
* **Arguments**: None
* **Usage**:
  * Adds typical lights to the visualization window.

## Initialize Body

### Class: chrono.ChBody
* **Name**: `ChBody`
* **Arguments**: None
* **Usage**:
  * Represents a rigid body in Chrono.

#### Method: `SetPos`
* **Name**: `SetPos`
* **Arguments**:
  * `pos`: Position vector (ChVector3d).
* **Usage**:
  * Sets the position of the body.

#### Method: `SetMass`
* **Name**: `SetMass`
* **Arguments**:
  * `mass`: Mass of the body (float).
* **Usage**:
  * Sets the mass of the body.

#### Method: `SetInertiaXX`
* **Name**: `SetInertiaXX`
* **Arguments**:
  * `inertia`: Inertia tensor diagonal (ChVector3d).
* **Usage**:
  * Sets the inertia tensor of the body.

#### Method: `SetPosDt`
* **Name**: `SetPosDt`
* **Arguments**:
  * `pos_dt`: Velocity vector (ChVector3d).
* **Usage**:
  * Sets the linear velocity of the body.

#### Method: `SetFixed`
* **Name**: `SetFixed`
* **Arguments**:
  * `fixed`: Boolean value to fix or unfix the body (bool).
* **Usage**:
  * Fixes the body (makes it immovable).

#### Method: `EnableCollision`
* **Name**: `EnableCollision`
* **Arguments**:
  * `enable`: Boolean value to enable or disable collision (bool).
* **Usage**:
  * Enables or disables collision for the body.

#### Method: `AddBoxGeometry`
* **Name**: `AddBoxGeometry`
* **Arguments**:
  * `body`: The body to which the geometry will be added (ChBody).
  * `material`: The contact material (ChContactMaterial).
  * `size`: Size of the box (ChVector3d).
  * `pos`: Position of the box (ChVector3d).
* **Usage**:
  * Adds a box geometry to the specified body with the given size and position.

## Setting Parameters

### Variable: friction
* **Name**: `friction`
* **Type**: float
* **Usage**:
  * Defines the friction coefficient used in the contact material properties.

## Simulation Loop

### Method: `sys.DoStepDynamics`
* **Name**: `DoStepDynamics`
* **Arguments**:
  * `time_step`: Time step for the dynamics simulation (float).
* **Usage**:
  * Advances the simulation by the given time step.

### Method: `vis.Run`
* **Name**: `Run`
* **Arguments**: None
* **Usage**:
  * Runs the visualization window update.

### Method: `vis.BeginScene`
* **Name**: `BeginScene`
* **Arguments**: None
* **Usage**:
  * Starts rendering a new frame.

### Method: `vis.Render`
* **Name**: `Render`
* **Arguments**: None
* **Usage**:
  * Renders the current scene.

### Method: `vis.EndScene`
* **Name**: `EndScene`
* **Arguments**: None
* **Usage**:
  * Ends rendering the current frame.

### Method: `chrono.GetChronoDataFile`
* **Name**: `GetChronoDataFile`
* **Arguments**:
  * `filename`: Name of the data file (str).
* **Usage**:
  * Retrieves the full path to a file in the Chrono data directory.

### Method: `sys.GetNumContacts`
* **Name**: `GetNumContacts`
* **Arguments**: None
* **Usage**:
  * Returns the number of contacts currently detected in the system.

### Method: `sys.GetContactContainer.ReportAllContacts`
* **Name**: `ReportAllContacts`
* **Arguments**:
  * `callback`: Instance of a contact reporting callback class.
* **Usage**:
  * Processes all contacts in the system and calls the provided callback for each contact.

### Method: `sys.GetContactContainer.RegisterAddContactCallback`
* **Name**: `RegisterAddContactCallback`
* **Arguments**:
  * `callback`: Instance of a contact material callback class.
* **Usage**:
  * Registers a callback for modifying contact materials whenever a contact is added.
